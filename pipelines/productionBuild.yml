# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

# Create a production build artifact from the HEAD of the master branch.
trigger:
  branches:
    include:
      - master

pool:
  name: Azure Pipelines
  vmImage: windows-latest
  demands:
    - msbuild
    - vstest

variables:
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  ProductBinPath: '$(Build.SourcesDirectory)\src\Microsoft.Graph.Bicep.Types\bin\$(BuildConfiguration)'

stages:
  - stage: build
    jobs:
      - job: build

        steps:
          - task: UseDotNet@2
            displayName: "Use .NET 2" # needed for ESRP signing
            inputs:
              version: 2.x

          - task: UseDotNet@2
            displayName: "Use .NET 6"
            inputs:
              version: 6.x

          - task: PoliCheck@1
            displayName: 'Run PoliCheck "/src"'
            inputs:
              inputType: CmdLine
              cmdLineArgs: '/F:$(Build.SourcesDirectory)/src /T:9 /Sev:"1|2" /PE:2 /O:poli_result_src.xml'

          # Install the nuget tool.
          - task: NuGetToolInstaller@0
            displayName: "Use NuGet >=5.2.0"
            inputs:
              versionSpec: ">=5.2.0"
              checkLatest: true

          # Build the solution
          - task: DotNetCoreCLI@2
            displayName: "build"
            inputs:
              projects: '$(Build.SourcesDirectory)\Microsoft.Graph.Bicep.Types.sln'
              arguments: "--configuration $(BuildConfiguration) --no-incremental"

          # Run unit tests
          - task: DotNetCoreCLI@2
            displayName: "test"
            inputs:
              command: "test"
              projects: '$(Build.SourcesDirectory)\Microsoft.Graph.Bicep.Types.sln'
              arguments: "--configuration $(BuildConfiguration) --no-build"

          # CredScan
          - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
            displayName: "Run CredScan - Src"
            inputs:
              toolMajorVersion: "V2"
              scanFolder: '$(Build.SourcesDirectory)\src'
              debugMode: false

          - task: AntiMalware@3
            displayName: "Run MpCmdRun.exe - ProductBinPath"
            inputs:
              FileDirPath: "$(ProductBinPath)"
            enabled: false

          - task: BinSkim@3
            displayName: "Run BinSkim - Product Binaries"
            inputs:
              InputType: Basic
              AnalyzeTarget: '$(ProductBinPath)\**\Microsoft.Graph.Bicep.Types.dll'
              AnalyzeSymPath: "$(ProductBinPath)"
              AnalyzeVerbose: true
              AnalyzeHashes: true
              AnalyzeEnvironment: true

          - task: PublishSecurityAnalysisLogs@2
            displayName: "Publish Security Analysis Logs"
            inputs:
              ArtifactName: SecurityLogs

          - task: PostAnalysis@1
            displayName: "Post Analysis"
            inputs:
              BinSkim: true
              CredScan: true
              PoliCheck: true

          - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
            displayName: "ESRP CodeSigning"
            inputs:
              ConnectedServiceName: "microsoftgraph ESRP CodeSign DLL and NuGet (AKV)"
              FolderPath: src
              signConfigType: inlineSignParams
              inlineOperation: |
                [
                    {
                        "keyCode": "CP-230012",
                        "operationSetCode": "SigntoolSign",
                        "parameters": [
                        {
                            "parameterName": "OpusName",
                            "parameterValue": "Microsoft"
                        },
                        {
                            "parameterName": "OpusInfo",
                            "parameterValue": "http://www.microsoft.com"
                        },
                        {
                            "parameterName": "FileDigest",
                            "parameterValue": "/fd \"SHA256\""
                        },
                        {
                            "parameterName": "PageHash",
                            "parameterValue": "/NPH"
                        },
                        {
                            "parameterName": "TimeStamp",
                            "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                        }
                        ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    },
                    {
                        "keyCode": "CP-230012",
                        "operationSetCode": "SigntoolVerify",
                        "parameters": [ ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    }
                ]
              SessionTimeout: 20

          # Pack
          - task: DotNetCoreCLI@2
            displayName: "pack"
            inputs:
              command: pack
              projects: src/Microsoft.Graph.Bicep.Types/Microsoft.Graph.Bicep.Types.csproj
              arguments: "-o $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration) --no-build --include-symbols --include-source /p:SymbolPackageFormat=snupkg"

          - task: PowerShell@2
            displayName: "Validate project version has been incremented"
            condition: and(contains(variables['build.sourceBranch'], 'refs/heads/master'), succeeded())
            inputs:
              targetType: "filePath"
              filePath: $(System.DefaultWorkingDirectory)\scripts\ValidateProjectVersionUpdated.ps1
              pwsh: true

          - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
            displayName: "ESRP CodeSigning Nuget Packages"
            inputs:
              ConnectedServiceName: "microsoftgraph ESRP CodeSign DLL and NuGet (AKV)"
              FolderPath: "$(Build.ArtifactStagingDirectory)"
              Pattern: "*.nupkg"
              signConfigType: inlineSignParams
              inlineOperation: |
                [
                    {
                        "keyCode": "CP-401405",
                        "operationSetCode": "NuGetSign",
                        "parameters": [ ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    },
                    {
                        "keyCode": "CP-401405",
                        "operationSetCode": "NuGetVerify",
                        "parameters": [ ],
                        "toolName": "sign",
                        "toolVersion": "1.0"
                    }
                ]
              SessionTimeout: 20

          - task: PublishPipelineArtifact@1
            displayName: "Upload Artifact: Nugets"
            inputs:
              artifactName: Nugets
              targetPath: $(Build.ArtifactStagingDirectory)

  - stage: deploy
    condition: and(contains(variables['build.sourceBranch'], 'refs/heads/master'), succeeded())
    dependsOn: build
    jobs:
      - deployment: deploy
        environment: microsoftgraph-nuget-org
        strategy:
          runOnce:
            deploy:
              pool:
                vmImage: ubuntu-latest
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: Download nupkg from artifacts
                  inputs:
                    artifact: Nugets
                    source: current
                - task: NuGetCommand@2
                  displayName: "NuGet push"
                  inputs:
                    command: push
                    packagesToPush: "$(Pipeline.Workspace)/Nugets/Microsoft.Graph.Bicep.Types.*.nupkg"
                    nuGetFeedType: external
                    publishFeedCredentials: "microsoftgraph NuGet connection"
